generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(cuid())
  email     String     @unique
  name      String?
  credits   Int        @default(150)
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")
  campaigns Campaign[]
  settings  UserSettings?

  @@map("users")
}

model UserSettings {
  id                      String   @id @default(cuid())
  userId                  String   @unique @map("user_id")
  templatePesquisa        String   @default("") @map("template_pesquisa") @db.Text
  templateAnaliseEmpresa  String   @default("") @map("template_analise_empresa") @db.Text
  emailTitulo1            String   @default("") @map("email_titulo_1")
  emailCorpo1             String   @default("") @map("email_corpo_1") @db.Text
  emailTitulo2            String   @default("") @map("email_titulo_2")
  emailCorpo2             String   @default("") @map("email_corpo_2") @db.Text
  emailTitulo3            String   @default("") @map("email_titulo_3")
  emailCorpo3             String   @default("") @map("email_corpo_3") @db.Text
  informacoesPropria      String   @default("") @map("informacoes_propria") @db.Text
  createdAt               DateTime @default(now()) @map("created_at")
  updatedAt               DateTime @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("user_settings")
}

model Campaign {
  id          String         @id @default(cuid())
  userId      String         @map("user_id")
  title       String
  status      CampaignStatus @default(PROCESSING)
  quantidade  Int
  tipo        CampaignType
  termos      String
  locais      String
  planilhaUrl String?        @map("planilha_url")
  createdAt   DateTime       @default(now()) @map("created_at")
  updatedAt   DateTime       @updatedAt @map("updated_at")
  user        User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  leads       Lead[]

  @@map("campaigns")
}

model Lead {
  id             String   @id @default(cuid())
  campaignId     String   @map("campaign_id")
  nomeEmpresa    String   @map("nome_empresa")
  endereco       String?
  website        String?
  telefone       String?
  categoria      String?
  totalReviews   String?  @map("total_reviews")
  notaMedia      String?  @map("nota_media")
  linkGoogleMaps String?  @map("link_google_maps")
  createdAt      DateTime @default(now()) @map("created_at")
  campaign       Campaign @relation(fields: [campaignId], references: [id], onDelete: Cascade)

  @@map("leads")
}

enum CampaignStatus {
  PROCESSING
  COMPLETED
  FAILED
}

enum CampaignType {
  BASICO
  COMPLETO
}
